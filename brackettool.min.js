async function brackettool(e,t,r,n,s,i,l){function a(){function e(t,n){return new Promise((s,i)=>{if("string"==typeof t||t instanceof String)r.push({id:n,brackets:t}),s();else if(Array.isArray(t)){let r=[];for(let s in t)r.push(e(t[s],n.concat(s)));Promise.all(r).then(e=>{s(e)})}else i(u.invalidBrackets)})}let r=[];return new Promise((n,s)=>{e(t,[]).then(()=>{if(r.length%2==0){let e=[];for(let t in r)for(let n in r[t].id)void 0===e[n]&&(e[n]=0),e[n]=Math.max(e[n],r[t].id[n].toString().length);e=e.map(e=>e.toString().length);for(let t in r){for(let n in r[t].id){let s=`${"0".repeat(e[n])}${r[t].id[n]}`;r[t].id[n]=s.substring(s.length-e[n],s.length)}r[t].upper=r[t].id.slice(0,r[t].id.length-1)}r.sort((e,t)=>e.id.join("")-t.id.join("")).map(e=>[e.brackets,e.upper]);let t=[];for(let e=0;e<r.length/2;e++)r[2*e].upper.join("")!==r[2*e+1].upper.join("")&&s(u.oddBrackets),t[e]=[r[2*e].brackets,r[2*e+1].brackets];n(t)}else s(u.oddBrackets)}).catch(e=>{s(e)})})}function o(t){function a(e,r){return r?new RegExp(`${c(t[e][0])}([\\s\\S]*?)${c(t[e][1])}`,"g"):new RegExp(`[\\s\\S]{0,${i}}${c(t[e][0])}[\\s\\S]*?${c(t[e][1])}[\\s\\S]{0,${l}}`,"g")}function o(e,r){return r?new RegExp(`(?<!<[^>]*)${c(t[e][0])}([\\s\\S]*?)${c(t[e][1])}`,"g"):new RegExp(`[\\s\\S]{0,${i}}${c(t[e][0])}[\\s\\S]*?${c(t[e][1])}[\\s\\S]{0,${l}}`,"g")}function p(e){return/delete(?!-together)|erase|remove/.test(r)?"$1":/delete-together/.test(r)?"":/brackets?/.test(r)?`$1<span class="brackets brackets-before brackets-${e}">${t[e][0]}</span>$2<span class="brackets brackets-after brackets-${e}">${t[e][1]}</span>`:/contents?/.test(r)?`<span class="brackets brackets-${e}">$1</span>`:(console.error(u.invalidProcType),!1)}let d=e;if(void 0===n||""===n||/all|hole/.test(n)){for(let e in t)d=d.replace(o(e,!0),p(e));return d}if(!/parts?|pickout|pickup/.test(n))return console.error(u.invalidSelectMode),!1;for(let r in t)a(r,!0).test(e)&&(d=(e.match(a(r,!1))||[""]).map(e=>e.replace(o(r,!0),p(r)).replace(/[\r\n]/g,"")));if(/array|row/.test(s))return d;if(void 0!==s&&""!==s&&!/list|ul|ol/.test(s))return console.log(u.invalidOutputType),!1;{let e="";for(let t in d)e+=`<li>${d[t]}</li>\n`;switch(s){case/list|ul/:return`<ul>\n${e}</ul>\n`;case"ol":return`<ol>\n${e}</ol>\n`;default:return`<ul>\n${e}</ul>\n`}}}function c(e){function t(e){return e.replace(/(\/|\\|\^|\$|\*|\+|\?|\.|\(|\)|\[|\]|\{|\})/g,"\\$1")}return"string"==typeof e||e instanceof String?t(e):Array.isArray(e)?e.map(e=>e=t(e)):e}let u={oddBrackets:"括弧の指定が奇数です。",invalidBrackets:"引数 brackets の値の型が無効です。",invalidSelectMode:"引数 selectMode の値が無効です。",invalidProcType:"引数 procType の値が無効です。",mismatchBrackets:"一致しない brackets があります。",invalidOutputType:"引数 outputType の値が無効です"};return a().then(e=>o(e))}